{"version":3,"sources":["Components/Header/Header.js","Components/User/User.js","Components/Friend Request/FriendRequest.js","Components/Body Block/UserSection.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","src","alt","href","User","props","console","log","clickHandler","user","full_name","avater","company_name","address","email","gender","designation","icon","faBuilding","faHome","faEnvelope","faVenusMars","faUserMd","onClick","faPlus","FriendRequest","friendReq","totalSalary","reduce","friend","salary","style","textAlign","paddingRight","position","top","length","UserSection","useState","users","setUsers","friendReqs","setFriendReqs","useEffect","data","addToFriendReq","newFriendReqs","map","key","id","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"i0KAsBeA,G,kBAnBA,WAGX,OACI,6BACI,yBAAKC,UAAU,aACX,yBAAMC,IAAI,0DAA0DC,IAAI,UAE5E,yBAAKF,UAAU,WACX,6BACI,uBAAGG,KAAK,SAAR,QACA,uBAAGA,KAAK,WAAR,UACA,uBAAGA,KAAK,YAAR,gB,6CCuBLC,G,MAjCF,SAACC,GACVC,QAAQC,IAAIF,EAAMG,cADE,MAE2DH,EAAMI,KAA9EC,EAFa,EAEbA,UAAWC,EAFE,EAEFA,OAAQC,EAFN,EAEMA,aAAcC,EAFpB,EAEoBA,QAASC,EAF7B,EAE6BA,MAAOC,EAFpC,EAEoCA,OAAQC,EAF5C,EAE4CA,YAChE,OACI,6BACI,yBAAKhB,UAAU,YACX,yBAAKA,UAAU,gBAEP,4BAAKU,IAGb,yBAAKV,UAAU,2BACX,yBAAKA,UAAU,iBACX,yBAAKC,IAAKU,EAAQT,IAAI,UAE1B,yBAAKF,UAAU,wBACX,4BAAI,kBAAC,IAAD,CAAiBiB,KAAMC,MAA3B,IAA2D,KAAKN,GAChE,4BAAI,kBAAC,IAAD,CAAiBK,KAAME,MAA3B,IAAuD,KAAKN,GAC5D,4BAAI,kBAAC,IAAD,CAAiBI,KAAMG,MAA+B,KAAKN,IAEnE,yBAAKd,UAAU,oBACX,4BAAI,kBAAC,IAAD,CAAiBiB,KAAMI,MAAgC,KAAKN,GAChE,4BAAI,kBAAC,IAAD,CAAiBE,KAAMK,MAA6B,KAAKN,KAGrE,yBAAKhB,UAAU,cACX,4BAAQuB,QAAS,kBAAMlB,EAAMG,aAAaH,EAAMI,OAAOT,UAAU,gBAAjE,cAA2F,kBAAC,IAAD,CAAiBiB,KAAMO,YCVvHC,EAnBO,SAACpB,GACnB,IAAMqB,EAAYrB,EAAMqB,UAClBC,EAAcD,EAAUE,QAAO,SAACD,EAAaE,GAAd,OAAyBF,EAAcE,EAAOC,SAAO,GAQ1F,OACI,yBAAKC,MAPS,CACdC,UAAW,OACXC,aAAc,OACdC,SAAU,SACVC,IAAK,MAID,sDACA,8CAAoBT,EAAUU,QAC9B,6CAAmBT,KCiBhBU,EA3BK,WAAO,IAAD,EACIC,mBAAS,IADb,mBACfC,EADe,KACRC,EADQ,OAEcF,mBAAS,IAFvB,mBAEfG,EAFe,KAEHC,EAFG,KAItBC,qBAAU,WACNH,EAASI,KACX,IAEF,IAAMC,EAAiB,SAAChB,GACpB,IAAMiB,EAAa,sBAAOL,GAAP,CAAmBZ,IACtCa,EAAcI,IAGlB,OACI,yBAAK9C,UAAU,sBACX,yBAAKA,UAAU,iBAEPuC,EAAMQ,KAAI,SAAAtC,GAAI,OAAI,kBAAC,EAAD,CAAMD,aAAcqC,EAAgBpC,KAAMA,EAAMuC,IAAKvC,EAAKwC,SAGpF,yBAAKjD,UAAU,6BACX,kBAAC,EAAD,CAAe0B,UAAWe,OCX3BS,MAXf,WACE,OACE,yBAAKlD,UAAU,OACb,6BACE,kBAAC,EAAD,OAEF,kBAAC,EAAD,QCCcmD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9D,QAAQ8D,MAAMA,EAAMC,c","file":"static/js/main.e42064ba.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"introArea\">\r\n                <img  src=\"http://pngimg.com/uploads/microsoft/microsoft_PNG15.png\" alt=\"logo\" />\r\n            </div>\r\n            <div className=\"navArea\">\r\n                <nav>\r\n                    <a href=\"/home\">Home</a>\r\n                    <a href=\"/people\">People</a>\r\n                    <a href=\"/profile\">Profile</a>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faHome, faEnvelope, faBuilding, faVenusMars, faUserMd, faPlus} from '@fortawesome/free-solid-svg-icons'\r\nimport './User.css'\r\n\r\nconst User = (props) => {\r\n    console.log(props.clickHandler);\r\n    const {full_name, avater, company_name, address, email, gender, designation} = props.user;\r\n    return (\r\n        <div>\r\n            <div className=\"userBody\">\r\n                <div className=\"userFullName\">\r\n                    {\r\n                        <h3>{full_name}</h3>\r\n                    }\r\n                </div>\r\n                <div className=\"userDetailsSection user\">\r\n                    <div className=\"userImageArea\">\r\n                        <img src={avater} alt=\"user\"/>\r\n                    </div>\r\n                    <div className=\"userInformation user\"> \r\n                        <h5><FontAwesomeIcon icon={faBuilding}></FontAwesomeIcon> {\"  \"+company_name}</h5>\r\n                        <h5><FontAwesomeIcon icon={faHome}></FontAwesomeIcon> {\"  \"+address}</h5>\r\n                        <h5><FontAwesomeIcon icon={faEnvelope}></FontAwesomeIcon>{\"  \"+email}</h5>\r\n                    </div>\r\n                    <div className=\"userJobInfo user\">\r\n                        <h5><FontAwesomeIcon icon={faVenusMars}></FontAwesomeIcon>{\"  \"+gender}</h5>\r\n                        <h5><FontAwesomeIcon icon={faUserMd}></FontAwesomeIcon>{\"  \"+designation}</h5>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footerArea\">\r\n                    <button onClick={() => props.clickHandler(props.user)} className=\"btnAddFriend\">Add Friend <FontAwesomeIcon icon={faPlus}/></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","import React from 'react';\r\n\r\nconst FriendRequest = (props) => {\r\n    const friendReq = props.friendReq;\r\n    const totalSalary = friendReq.reduce((totalSalary, friend) => totalSalary + friend.salary,0);\r\n\r\n    const alignStyle ={\r\n        textAlign: 'left',\r\n        paddingRight: '20px',\r\n        position: 'sticky',\r\n        top: '0'\r\n    }\r\n    return (\r\n        <div style={alignStyle}>\r\n            <h1>Friend Request Sumarry</h1>\r\n            <h3>Request Sent : {friendReq.length}</h3>\r\n            <h3>Total Salary: {totalSalary}</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FriendRequest;","import React, { useState, useEffect } from 'react';\r\nimport './UserSection.css';\r\nimport data from '../../fakeData/userData.json'\r\nimport User from '../User/User';\r\nimport FriendRequest from '../Friend Request/FriendRequest';\r\n\r\nconst UserSection = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [friendReqs, setFriendReqs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setUsers(data);\r\n    },[]);\r\n\r\n    const addToFriendReq = (friend) => {\r\n        const newFriendReqs = [...friendReqs, friend];\r\n        setFriendReqs(newFriendReqs);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"userProfileSection\">\r\n            <div className=\"userContainer\">\r\n                {\r\n                    users.map(user => <User clickHandler={addToFriendReq} user={user} key={user.id} />)\r\n                }\r\n            </div>\r\n            <div className=\"friendCollectionContainer\">\r\n                <FriendRequest friendReq={friendReqs} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserSection;","import React from 'react';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport UserSection from './Components/Body Block/UserSection';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div>\n        <Header/>\n      </div>\n      <UserSection/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}